---
- name: Run on all TEST_SERVERS
  hosts: test_servers
  gather_facts: true
  become: true

  vars_files: ../group_vars/secrets.yml

  roles:
    - role: system
      tags: system
    - role: geerlingguy.security
      tags: security
    - role: geerlingguy.ntp
      tags: ntp

###
- name: Run on "dev01.test"
  hosts: dev01.test
  gather_facts: true
  become: true

  vars_files: ../group_vars/secrets.yml

  roles:
    - role: geerlingguy.pip
      tags: containers
    - role: geerlingguy.docker
      tags: containers
    - role: ufw
      tags: ufw

  tasks:
    - name: Essential-debian | Install extra packages
      ansible.builtin.package:
        name: "{{ extra_packages }}"
        state: present

    - name: Check if a reboot is required on Ubuntu
      when: ansible_facts['os_family'] == 'Debian'
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: ubuntu_reboot_required

    - name: Reboot Debian/Ubuntu if required
      when: ubuntu_reboot_required.stat.exists | default(false)
      ansible.builtin.reboot:
        reboot_timeout: 600

###
- name: Run on "srv01.test"
  hosts: srv01.test
  gather_facts: true
  become: true

  vars_files: ../group_vars/secrets.yml

  roles:
    - role: geerlingguy.pip
      tags: containers
    - role: geerlingguy.docker
      tags: containers
    - role: ufw
      tags: ufw
    - role: dockge
      tags: dockge
    - role: littlelink
      tags:
        - containers
        - littlelink

###
- name: Run on "srv02.test"
  hosts: srv02.test
  gather_facts: true
  become: true

  vars_files: ../group_vars/secrets.yml

  roles:
    - role: geerlingguy.pip
      tags: containers
    - role: geerlingguy.docker
      tags: containers
    - role: ufw
      tags: ufw

###
- name: Run on "ubt.test"
  hosts: ubt.test
  gather_facts: true
  become: true

  vars_files: ../group_vars/secrets.yml

  roles:
    - role: geerlingguy.pip
      tags: containers
    - role: ufw
      tags: ufw

  tasks:
    - name: Install | flatpak as user
      tags: flatpak
      become_user: deploy
      become: true
      when: flatpak | bool
      block:
        - name: Install flatpak as user
          become: true
          ansible.builtin.package:
            name: flatpak
            state: present
        - name: Add repository remote as user
          become: true
          community.general.flatpak_remote:
            name: flathub
            state: present
            flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
            method: user
        - name: Install multiple packages as user
          community.general.flatpak:
            name:
              - org.videolan.VLC          ## VLC
              - org.remmina.Remmina       ## Remmina RDP client
              - org.keepassxc.KeePassXC   ## KeePass for linux
              - com.jgraph.drawio.desktop ## draw.io client
            state: present
            method: user
        - name: Remove multiple packages as user
          community.general.flatpak:
            name:
              - im.riot.Riot              ## Element matrix client
            # - com.visualstudio.code     ## VisualStudio
            state: absent
            method: user

    - name: Install | starship
      tags: starship
      become: true
      when: starship | bool
      block:
        - name: Check that the startship exists
          ansible.builtin.stat:
            path: /usr/local/bin/starship
          register: stat_starship
        - name: Get starship install script
          ansible.builtin.get_url:
            url: https://starship.rs/install.sh
            dest: /tmp/starship_install.sh
            mode: '0755'
          when: not stat_starship.stat.exists
        - name: Install starship
          ansible.builtin.shell:
            cmd: /tmp/starship_install.sh --yes
            executable: /bin/sh
          register: my_starship
          changed_when: my_starship.rc != 0
          when: not stat_starship.stat.exists

    - name: Install | VisualStudio
      tags: vscode
      become: true
      when: visualstudio | bool
      block:
        - name: Get VisualStudio install script
          ansible.builtin.command: 'sudo curl -L -o /tmp/code.deb https://go.microsoft.com/fwlink/?LinkID=760868'
          register: my_visualstudiocurl
          changed_when: my_visualstudiocurl.rc != 0
        - name: Chmod Install deb
          ansible.builtin.command: 'sudo chmod +x /tmp/code.deb'
          register: my_visualstudiodeb
          changed_when: my_visualstudiodeb.rc != 0
        - name: Install VisualStudio
          ansible.builtin.command: 'sudo dpkg -i /tmp/code.deb'
          register: my_visualstudio
          changed_when: my_visualstudio.rc != 0

    - name: Install | Git, ssh keys to use with git
      tags: dotfiles
      become_user: deploy
      when: dotfiles | bool
      block:
        - name: User | copy ssh key to use for Git to user.
          ansible.builtin.copy:
            src: ~/.ssh/git_deploy
            dest: ~/.ssh/git_deploy
            owner: deploy
            mode: '600'
        - name: User | copy ssh key to use for Git to user.
          become_user: deploy
          ansible.builtin.copy:
            src: ~/.ssh/git_deploy.pub
            dest: ~/.ssh/git_deploy.pub
            owner: deploy
            mode: '644'
        - name: Clone a dotfiles repo with separate git directory # noqa: latest
          become: false
          ansible.builtin.git:
            repo: git@github.com:alf149/dotfiles.git
            dest: ~/git/dotfiles
            accept_hostkey: true
            clone: true
            update: true
            remote: main
            force: true
            key_file: /home/deploy/.ssh/git_deploy
          tags:
            - dotfiles
            - git

    - name: Install | Tmux and tpm
      tags: tmux
      become_user: deploy
      when: tmux | bool
      block:
        - name: Install tmux
          ansible.builtin.package:
            name: tmux
            state: present
        - name: Clone a tmux tpm from github # noqa: latest
          ansible.builtin.git:
            repo: git@github.com:tmux-plugins/tpm.git
            dest: ~/.tmux/plugins/tpm
            accept_hostkey: true
            key_file: /home/deploy/.ssh/git_deploy

    - name: Install | VPN for Work
      tags: vpn
      when: vpn | bool
      ## https://www.citrix.com/downloads/workspace-app/linux/workspace-app-for-linux-latest.html
      ansible.builtin.package:
        name:
          - openconnect
          - network-manager-openconnect
          - network-manager-openconnect-gnome

    - name: Install | mscorefonts, NerdFontsSymbols, CascadiaCode
      tags: fonts
      become_user: deploy
      when: fonts | bool
      block:
        - name: Install Fonts
          ansible.builtin.package:
            name:
              - ttf-mscorefonts-installer
          tags: fonts
        - name: Create a directory ~/.local/share/fonts
          ansible.builtin.file:
            path: ~/.local/share/fonts
            state: directory
            mode: '0755'
        - name: Check that the SymbolsNerdFont exists
          ansible.builtin.stat:
            path: ~/.local/share/fonts/SymbolsNerdFont-Regular.ttf
          register: stat_nerdfontssymbolsonly
        - name: Download NerdFontsSymbolsOnly.zip Fonts
          ansible.builtin.unarchive:
            src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/NerdFontsSymbolsOnly.zip
            dest: ~/.local/share/fonts
            remote_src: true
          when: not stat_nerdfontssymbolsonly.stat.exists
        - name: Check that the CascadiaCode exists
          ansible.builtin.stat:
            path: ~/.local/share/fonts/CaskaydiaCoveNerdFont-Italic.ttf
          register: stat_cascadiacode
        - name: Download CascadiaCode.zip Fonts
          ansible.builtin.unarchive:
            src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/CascadiaCode.zip
            dest: ~/.local/share/fonts
            remote_src: true
          when: not stat_cascadiacode.stat.exists
        - name: Update the font cache
          ansible.builtin.command: fc-cache ~/.local/share/fonts
          changed_when: false
          when:
            - not stat_cascadiacode.stat.exists
            - not stat_nerdfontssymbolsonly.stat.exists
        - name: Update the font cache
          ansible.builtin.command: fc-cache -f -v
          changed_when: false

    - name: Install | exa ls alternatives
      tags: eza
      become_user: deploy
      when: eza | bool
      block:
        - name: Check that the eza exists
          ansible.builtin.stat:
            path: /usr/local/bin/eza
          register: stat_eza
        - name: Install | eza an ls/ll alternative
          become: true
          ansible.builtin.unarchive:
            src: https://github.com/eza-community/eza/releases/latest/download/eza_x86_64-unknown-linux-gnu.tar.gz
            dest: /usr/local/bin
            remote_src: true
            mode: '0755'
            owner: root
          when: not stat_eza.stat.exists

    - name: Install | tldr to logn didn't read
      tags: tldr
      become_user: deploy
      when: tldr | bool
      block:
        - name: Check that the tldr exists
          become_user: deploy
          ansible.builtin.stat:
            path: ~/.local/bin/tldr
          register: stat_tldr
        - name: Install | install tldr
          become_user: deploy
          ansible.builtin.command: pip3 install tldr
          register: my_tldr
          when: not stat_tldr.stat.exists
          changed_when: my_tldr.rc != 0
          # To uninstall: pip3 uninstall tldr

    # Config Stow another day
    # - name: Install stow
    #   ansible.builtin.package:
    #     name: stow
    #     state: present
    #   tags: stow
    # - name: Setup Stow and Dotfiles from Git Part2
    #   become_user: deploy
    #   ansible.builtin.command:
    #     chdir: ~/git/dotfiles
    #     cmd: stow -t ~ -R */ --ignore='.*\.sh'
    #   register: my_stow
    #   changed_when: my_stow.rc != 0
    #   tags: stow
