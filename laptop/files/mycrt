#!/bin/bash
# ---------------------------------------------------------------------------
# Author: alf149
# DOWNLOAD mycrt
# You'll find last lectl version at https://github.com/alf149/mycrt
#
# Uses jq as json handler
# uses curl to get json form crt.sh
# 
#----------------------------------------------------------------------------

scriptname='mycrt'
domain="${1}"
runtime=$(date +"%Y_%m_%d_%H_%M_%S")

# Define temp dir and tempifile
tempdir=".${scriptname}.$$.tmp"
if [ ! -d "${tempdir}" ];then
    mkdir "${tempdir}"
fi
tempfile="${tempdir}/${domain}.$$.rl.tmp"

# Clean temp
_cleantemp() {
    if [ -d "${tempdir}" ];then
        rm -rf "${tempdir}"
    fi
}

echo "${runtime} - Checking ${typeofcerts} certs for ${domain}"
if [[ ( $domain != "" ) ]]; then

    echo "Results for $domain, more info in crt_${domain}_${runtime}.csv "
    echo .
    echo "--------"
    curl -s https://crt.sh/\?q\=\%.${domain}\&exclude\=expired\&deduplicate\=Y\&output\=json >> "$tempfile" 2>/dev/null
    cat $tempfile | jq -r 'map({issuer_ca_id, issuer_name,id, common_name, name_value, entry_timestamp, not_before, not_after, serial_number}) | (first | keys_unsorted) as $keys | map([to_entries[] | .value]) as $rows | $keys,$rows[] | @csv' > crt_${domain}_${runtime}.csv
    cat $tempfile | jq -r 'map({common_name, not_after}) | (first | keys_unsorted) as $keys | map([to_entries[] | .value]) as $rows | $keys,$rows[] | @csv'
else
    echo "You MUST specify a domain name."
fi

_cleantemp




