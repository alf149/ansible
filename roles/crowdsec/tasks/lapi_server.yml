---
- name: Crowdsec - ajust /etc/crowdsec/config.yaml listen_uri lapi
  replace:
    path: "/etc/crowdsec/config.yaml"
    regexp: 'listen_uri: 127.0.0.1:8080'
    replace: "listen_uri: {{ crowdsec_lapi_ip }}:8080"
    backup: yes  

- name: Crowdsec - apt update and install postgresql 
  package: 
    update_cache: yes 
    name: 
      - postgresql
      - python3-psycopg2
    state: present

- name: Crowdsec - postgresql enable  and  start services
  service:
    name: postgresql
    state: started
    enabled: true

- name: Crowdsec - create crowdsec database
  postgresql_db:
    state: present
    name: "{{ crowdsec_psql_db_name }}"
  become: true
  become_user: postgres

- name: Crowdsec - create crowdsec db userc
  postgresql_user:
    state: present
    name: "{{ crowdsec_psql_db_user }}"
    password: "{{ crowdsec_psql_db_password }}"
  become: true
  become_user: postgres

- name: Crowdsec - grant db user access to app db
  postgresql_privs:
    type: database
    database: "{{ crowdsec_psql_db_name }}"
    roles: "{{ crowdsec_psql_db_user }}"
    grant_option: no
    privs: all
  become: true
  become_user: postgres

- name: Crowdsec - /etc/crowdsec/config.yaml template for lapi server
  template:
    src: templates/cs_config.j2
    dest:  /etc/crowdsec/config.yaml
    owner: root
    group: root
    mode: 0644

- name: Crowdsec - cscli machines add cs_agents on server
  command:
    cmd: "sudo cscli machines add {{ inventory_hostname }} -p {{ crowdsec_agent_hosts_password }} -u http://{{ crowdsec_lapi_ip }}:8080 --force"

- name: Crowdsec - cscli machines add cs_agents
  command:
    cmd: "sudo cscli machines add {{ item }} -p {{ crowdsec_agent_hosts_password }} -u http://{{ crowdsec_lapi_ip }}:8080 -f ~/{{ item}}_local_api_credentials.yaml --force"
  loop: "{{ crowdsec_agent_hosts  }}"

- name: crowdsec  - daemon reload and restart
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: yes
    name: crowdsec

- name: Crowdsec - enable  and  start services
  service:
    name: crowdsec
    state: started
    enabled: true
