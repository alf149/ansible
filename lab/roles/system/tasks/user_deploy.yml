---
- name: User | Create a login user
  become: true
  ansible.builtin.user:
    name: "{{ username_sec }}"
    create_home: true
    password: "{{ userpassword_sec }}"
    update_password: on_create
    groups:
      - "{{ sudo_group }}"
      - users
    state: present
    append: true
  tags: users

- name: User | Ensure group exists "{{ username_sec }}"
  become: true
  ansible.builtin.group:
    name: "{{ username_sec }}"
    state: present
  tags: users

- name: User | Copy the public SSH key
  become: true
  ansible.posix.authorized_key:
    user: "{{ username_sec }}"
    state: present
    key: "{{ ssh_public_key_sec }}"
  tags: users

- name: User | Set the default shell
  ansible.builtin.user:
    name: "{{ username_sec }}"
    shell: "{{ shell }}"
  tags: users

- name: User | Add configured user accounts to passwordless sudoers.
  ansible.builtin.lineinfile:
    dest: /etc/sudoers
    regexp: '^{{ item }}'
    line: '{{ item }} ALL=(ALL) NOPASSWD: ALL'
    state: present
    validate: 'visudo -cf %s'
    mode: '644'
  with_items: "{{ security_sudoers_passwordless }}"
  when: security_sudoers_passwordless | length > 0
  changed_when: false
  tags: users

- name: User | Suppress login messages
  ansible.builtin.file:
    name: /home/{{ username_sec }}/.hushlogin
    mode: '644'
    state: touch
    modification_time: preserve
    access_time: preserve
  tags: users

- name: User | copy '.bash_aliases' file. to user
  ansible.builtin.copy:
    src: files/dot_files/.bash_aliases
    dest: /home/{{ username_sec }}/.bash_aliases
    owner: "{{ username_sec }}"
    mode: '644'
  tags: users

- name: User | copy '.bash_aliases' file to root user.
  ansible.builtin.copy:
    src: files/dot_files/.bash_aliases
    dest: /root/.bash_aliases
    owner: root
    mode: '644'
  tags: users
