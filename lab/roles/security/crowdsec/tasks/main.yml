---
- name: Update apt and install Crowdsec curl gnupg apt-transport-https
  apt: 
    update_cache: yes 
    name:
      - curl 
      - gnupg 
      - apt-transport-https
    state: present

- name: Crowdsec Add GPG apt Key
  apt_key:
    url: https://packagecloud.io/crowdsec/crowdsec/gpgkey
    state: present

- name: Crowdsec Add Repository
  apt_repository:
    repo: "deb https://packagecloud.io/crowdsec/crowdsec/{{ ansible_distribution | lower  }} {{ansible_distribution_release | lower}} main"
    state: present
    
- name: Crowdsec Apt update and install Crowdsec and crowdsec-firewall-bouncer-iptables
  apt: 
    update_cache: yes 
    name:
      - crowdsec
      - crowdsec-firewall-bouncer-iptables
    state: present

- name: Crowdsec cscli hub update
  command:
    cmd: cscli hub update
  changed_when: false

- name: Crowdsec cscli hub upgrade
  command:
    cmd: cscli hub upgrade
  changed_when: false
    
- name: Crowdsec install collections
  command:
    cmd: "sudo cscli collections install crowdsecurity/{{ item }}"
  with_items: "{{ collections_list }}"
  register: collections_install_result
  changed_when: "'overwrite' not in collections_install_result.stderr"

- name: Crowdsec install scenarios
  command:
    cmd: "sudo cscli scenarios install crowdsecurity/{{ item }}"
  with_items: "{{ scenarios_list }}"
  register: scenarios_install_result
  changed_when: "'overwrite' not in scenarios_install_result.stderr"

- name: Crowdsec install parsers
  command:
    cmd: "sudo cscli parsers install crowdsecurity/{{ item }}"
  with_items: "{{ parsers_list }}"

  register: parsers_install_result
  changed_when: "'overwrite' not in parsers_install_result.stderr"

- name: Crowdsec install postoverflows
  command:
    cmd: "sudo cscli postoverflows install crowdsecurity/{{ item }}"
  with_items: "{{ postoverflows_list }}"
 
  register: postoverflows_install_result
  changed_when: "'overwrite' not in postoverflows_install_result.stderr"

### Config files
- name: Crowdsec enable/disable the Prometheus endpoint
  replace:
    path: "/etc/crowdsec/config.yaml"
    after: "prometheus:"
    regexp: 'enabled:.*$'
    replace: "{{ prometheus_endpoint }}"
    backup: yes
  notify:
    - Restart crowdsec

- name: Crowdsec ajust ban time
  replace:
    path: "/etc/crowdsec/profiles.yaml"
    after: "- type: ban"
    regexp: 'duration: [0-9].*$'
    replace: "{{ ban_duration }}"
    backup: yes
  notify:
    - Restart crowdsec

- name: Crowdsec add jounalctl ssh to acquis.yaml
  blockinfile:
    path: /etc/crowdsec/acquis.yaml
    insertafter: EOF
    block: |
      ---
      source: journalctl
      journalctl_filter:
        - "_SYSTEMD_UNIT=ssh.service"
      labels:
        type: journald"
      ---
    backup: yes
  notify:
    - Restart crowdsec

- name: Crowdsec cscli bash completion
  ansible.builtin.shell: "cscli completion bash | sudo tee /etc/bash_completion.d/cscli"
  register: bash_completion_result
  changed_when: "'# bash completion for' not in bash_completion_result.stdout"
  failed_when: "'Error' in bash_completion_result.stderr"
  
- name: Crowdsec start and enable Crowdsec services
  service:
    name: "{{ item }}"
    state: started
    enabled: true
  with_items: "{{ Crowdsec_services }}"

  