# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"
#ENV['VAGRANT_DEFAULT_PROVIDER'] = 'libvirt'
ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox'

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # # Default Virtualbox settings
  # config.vm.box_check_update = true
  # config.ssh.insert_key = true
  # config.vm.synced_folder ".", "/vagrant", disabled: true

  # Defaults RAM and CPU for all
  
  # config.vm.provider "libvirt" do |v|
  #   #v.gui = false
  #   v.memory = 2048
  #   v.cpus = 2
  #   #v.linked_clone = true
  #   #v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  #   #v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
  # end
   
  # Raspberry 1.
  config.vm.define "pi01.test", autostart: true do |pi01|
    pi01.vm.provider "virtualbox" do |v|
      v.memory = 1024
      v.cpus = 1
      v.linked_clone = true
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    end
    pi01.vm.box = "generic/ubuntu2004"
    pi01.vm.box_check_update = true
    pi01.vm.hostname = "pi01.test"
    pi01.vm.network :private_network, ip: "192.168.56.11", hostname: true
    pi01.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.config_file = "ansible.cfg"
      #ansible.galaxy_role_file = "requirements.yml"
      ansible.playbook = "provision.yml"
    end
  end

  # Raspberry 2.
  config.vm.define "pi02.test", autostart: true do |pi02|
    pi02.vm.provider "virtualbox" do |v|
      v.memory = 1024
      v.cpus = 1
      v.linked_clone = true
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    end
    pi02.vm.box = "generic/ubuntu2004"
    pi02.vm.box_check_update = true
    pi02.vm.hostname = "pi02.test"
    pi02.vm.network :private_network, ip: "192.168.56.12", hostname: true
    pi02.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.config_file = "ansible.cfg"
      ansible.playbook = "provision.yml"
    end
  end

  # ora01
  config.vm.define "ora01.test", autostart: true do |ora01|
    ora01.vm.provider "virtualbox" do |v|
      v.memory = 1024
      v.cpus = 1
      v.linked_clone = true
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    end
    ora01.vm.box = "generic/oracle8"
    ora01.vm.box_check_update = true
    ora01.vm.hostname = "ora01.test"
    ora01.vm.network :private_network, ip: "192.168.56.21", hostname: true
    ora01.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.config_file = "ansible.cfg"
      ansible.playbook = "provision.yml"
    end
  end

  # ora02
  config.vm.define "ora02.test", autostart: true do |ora02|
    ora02.vm.provider "virtualbox" do |v|
      v.memory = 1024
      v.cpus = 1
      v.linked_clone = true
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    end
    ora02.vm.box = "generic/oracle8"
    ora02.vm.box_check_update = true
    ora02.vm.hostname = "ora02.test"
    ora02.vm.network :private_network, ip: "192.168.56.22", hostname: true
    ora02.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.config_file = "ansible.cfg"
      ansible.playbook = "provision.yml"
    end
  end
  
  # rhel01
  config.vm.define "rhel01.test", autostart: true do |rhel01|
    rhel01.vm.provider "virtualbox" do |v|
      v.memory = 1024
      v.cpus = 1
      v.linked_clone = true
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    end
    rhel01.vm.box = "generic/rhel8"
    rhel01.vm.box_check_update = true
    rhel01.vm.hostname = "rhel01.test"
    rhel01.vm.network :private_network, ip: "192.168.56.31", hostname: true
    rhel01.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.config_file = "ansible.cfg"
      ansible.playbook = "provision.yml"
    end
  end

    # rhel02
    config.vm.define "rhel02.test", autostart: true do |rhel02|
      rhel02.vm.provider "virtualbox" do |v|
        v.memory = 1024
        v.cpus = 1
        v.linked_clone = true
        v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
      end
      rhel02.vm.box = "generic/rhel7"
      rhel02.vm.box_check_update = true
      rhel02.vm.hostname = "rhel02.test"
      rhel02.vm.network :private_network, ip: "192.168.56.32", hostname: true
      rhel02.vm.provision "ansible" do |ansible|
        ansible.compatibility_mode = "2.0"
        ansible.config_file = "ansible.cfg"
        ansible.playbook = "provision.yml"
      end
    end

end