enable_os_update: true

extra_packages: 
  - curl
  - wget
  - git
  - nano
  - python3
  - python3-pip
  - apt-transport-https
  - ca-certificates

## Firewall 
enable_ufw: true
resetufw: true
enable_ufw_deny_out: true
enable_ufw_fix_sessions: true

open_ports:
  - { src: any, dest: any, port: '22', proto: 'tcp', direction: out, comment: 'SSH' }
  - { src: any, dest: any, port: '53', proto: any, direction: out, comment: 'DNS' }
  - { src: any, dest: any, port: '123', proto: 'udp', direction: out, comment: 'NTP' }
  - { src: any, dest: any, port: '80', proto: 'tcp', direction: out, comment: 'http' }
  - { src: any, dest: any, port: '443', proto: 'tcp', direction: out, comment: 'https' }

  - { src: '192.168.10.0/24', dest: any, port: '22', proto: 'tcp', direction: in, comment: 'SSH # Secure Vlan' }
  - { src: '192.168.30.0/24', dest: any, port: '22', proto: 'tcp', direction: in, comment: 'SSH # Secure Vlan' }
  - { src: '192.168.3.0/24', dest: any, port: '22', proto: 'tcp', direction: in, comment: 'SSH # VPN Vlan' }

  - { src: any, dest: any, port: '80', proto: 'tcp', direction: in, comment: 'npm' }
  - { src: any, dest: any, port: '81', proto: 'tcp', direction: in, comment: 'npm' }
  - { src: any, dest: any, port: '443', proto: 'tcp', direction: in, comment: 'npm' }

  - { src: any, dest: any, port: '8080', proto: 'tcp', direction: in, comment: 'nginx' }
  - { src: any, dest: any, port: '8008', proto: 'tcp', direction: in, comment: 'librespeed' }
  - { src: any, dest: any, port: '3001', proto: 'tcp', direction: in, comment: 'uptimekuma' }
  - { src: any, dest: any, port: '3000', proto: 'tcp', direction: in, comment: 'homepage' }

  - { src: '172.17.0.0/16', dest: '172.17.0.0/16', port: '', proto: 'any', direction: out, comment: 'Docker' } #Docker
  - { src: '172.17.0.0/16', dest: '172.17.0.0/16', port: '', proto: 'any', direction: in, comment: 'Docker' } #Docker
  - { src: '172.18.0.0/16', dest: '172.18.0.0/16', port: '', proto: 'any', direction: out, comment: 'Docker' } #Docker
  - { src: '172.18.0.0/16', dest: '172.18.0.0/16', port: '', proto: 'any', direction: in, comment: 'Docker' } #Docker

  - { src: '172.20.0.0/16', dest: '172.20.0.0/16', port: '', proto: 'any', direction: out, comment: 'Docker' } #Docker
  - { src: '172.20.0.0/16', dest: '172.20.0.0/16', port: '', proto: 'any', direction: in, comment: 'Docker' } #Docker

  - { src: any, dest: any, port: '111', proto: any, direction: out, comment: 'NFS' } #NFS
  - { src: any, dest: any, port: '662', proto: any, direction: out, comment: 'NFS' } #NFS
  - { src: any, dest: any, port: '892', proto: any, direction: out, comment: 'NFS' } #NFS
  - { src: any, dest: any, port: '2049', proto: any, direction: out, comment: 'NFS' } #NFS
  - { src: any, dest: any, port: '4045', proto: any, direction: out, comment: 'NFS' } #NFS
  
  - { src: '192.168.30.80/24', dest: '', port: '111', proto: any, direction: in, comment: 'NFS' } #NFS
  - { src: '192.168.30.80/24', dest: '', port: '662', proto: any, direction: in, comment: 'NFS' } #NFS
  - { src: '192.168.30.80/24', dest: '', port: '892', proto: any, direction: in, comment: 'NFS' } #NFS
  - { src: '192.168.30.80/24', dest: '', port: '2049', proto: any, direction: in, comment: 'NFS' } #NFS
  - { src: '192.168.30.80/24', dest: '', port: '4045', proto: any, direction: in, comment: 'NFS' } #NFS

  - { src: any, dest: any, port: '41641', proto: udp, direction: out, comment: 'tailscale' } #https://tailscale.com/kb/1130/lxc-unprivileged
  - { src: any, dest: any, port: '3478', proto: udp, direction: out, comment: 'tailscale' }
  - { src: any, dest: any, port: '41641', proto: udp, direction: in, comment: 'tailscale' }
  - { src: any, dest: any, port: '3478', proto: udp, direction: in, comment: 'tailscale' }

users:
  - name: deploy
    comment: System Administration
    password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          66653831353765333338303931613132613863653231396365346234616462643365373665356230
          3461626266616538646161653631346235646633616232650a316161663933653865323538383861
          39616532623566353738343933353232346466333861323737313336626666393233646338643265
          3535643362626530640a336261323637613437306561366362366131373530356431643136666466
          39626136663135333231393731313065353638343764663336366131363630346663393461663863
          37386636336562323236636134323030613432623736626236386638326237353164363963396132
          64643562313666633864323635636332376233303563643462303166626331366534636639666132
          66336333623062373633343765663865646661313362653264353563653763633533626437333830
          35373665613436646161373038623733626530366561313262383662643566656563
    groups:
      - sudo
    ssh_key: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIG5iPUMbwcXyBjEp3rJA/d7Qv4HRo83BXo5az0H74kzj

sudoers: ['deploy']

#NFS
nfsclient_local_folder: "/opt/docker"
nfsclient_nfs_connect: "nas.lan:/volume1/docker_nas" 
# sudo mount nas.lan:/volume1/docker_nas /opt/docker
# showmount -e 192.168.30.80

# Docker Compose
docker_dir: "{{ nfsclient_local_folder }}/docker_prod"
nonfs_appdata_path: /opt/docker_static   ## to use for eg. sqllitedb and other stuff that does not run on nfs
docker_compose_generator_output_path: "/home/deploy"
docker_compose_generator_uid: "1000"
docker_compose_generator_gid: "1000"
appdata_path: "{{ docker_dir }}"

librespeed_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          66653831353765333338303931613132613863653231396365346234616462643365373665356230
          3461626266616538646161653631346235646633616232650a316161663933653865323538383861
          39616532623566353738343933353232346466333861323737313336626666393233646338643265
          3535643362626530640a336261323637613437306561366362366131373530356431643136666466
          39626136663135333231393731313065353638343764663336366131363630346663393461663863
          37386636336562323236636134323030613432623736626236386638326237353164363963396132
          64643562313666633864323635636332376233303563643462303166626331366534636639666132
          66336333623062373633343765663865646661313362653264353563653763633533626437333830
          35373665613436646161373038623733626530366561313262383662643566656563

global_env_vars:
  - "PUID=1000"
  - "PGID=1000"

containers:

  - service_name: nginx
    active: true
    image: nginx
    ports:
      - 8080:80
    volumes:
      - "{{ appdata_path }}/www/html:/usr/share/nginx/html" 
    restart: unless-stopped
  
  - service_name: librespeed
    active: true
    image: lscr.io/linuxserver/librespeed
    ports:
      - 8008:80
    environment:
      - MODE=standalone
      - TELEMETRY=true
      - "PASSWORD={{ librespeed_password }}"
    restart: unless-stopped

  - service_name: uptimekuma
    # path {{ nonfs_appdata_path }}/uptimekuma/datareated in ansible server_lan.yml manualy
    # path not on NAS sqlite does not vork on NAS. 
    # there is a rsync script or a cron job
    active: true
    image: louislam/uptime-kuma:1
    ports:
      - 3001:3001
    volumes:
      - "{{ nonfs_appdata_path }}/uptimekuma/data:/app/data" 
    include_global_env_vars: true
    restart: unless-stopped

  - service_name: homepage
    # path {{ appdata_path }}/homepage/config:/created in ansible server_lan.yml manualy
    active: true
    image: ghcr.io/gethomepage/homepage:latest
    ports:
      - 3000:3000
    volumes:
      - "{{ appdata_path }}/homepage/config:/app/config" 
    restart: unless-stopped

  - service_name: speedtest02
    active: true
    image: openspeedtest/latest
    ports:
      - 4000:3000
    restart: unless-stopped

  # - service_name: npm
  ##   nginx-proxy-manager
  #   active: true
  #   image: 'docker.io/jc21/nginx-proxy-manager:latest'
  #   ports:
  #     - '80:80'
  #     - '81:81'
  #     - '443:443'
  #   volumes:
  #     - "{{ nonfs_appdata_path }}/npm/data:/data"
  #     - "{{ nonfs_appdata_path }}/npm/letsencrypt:/etc/letsencrypt"
  #   restart: unless-stopped
